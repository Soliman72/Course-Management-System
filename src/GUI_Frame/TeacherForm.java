/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_Frame;

import com.mycompany.coursemanagement.Assignment;
import com.mycompany.coursemanagement.FileManagement;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ME1
 */
public class TeacherForm extends javax.swing.JFrame {

    private String teacherEmail;

    /**
     * Creates new form login
     */
    public TeacherForm() {
        initComponents();

        TeacherPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setPanelVisibility(true, false, false, false, false, false);
            }
        });
        AssignmentPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setPanelVisibility(false, false, false, false, false, true);
            }
        });

        coursePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setPanelVisibility(false, true, false, false, false, false);
            }
        });

        addAssignmentPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setPanelVisibility(false, false, true, false, false, false);
            }
        });

        studentPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setPanelVisibility(false, false, false, true, false, false);
            }
        });

        
    }

    public TeacherForm(String email) {
        this.teacherEmail = email;
        initComponents();
        TeacherPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setPanelVisibility(true, false, false, false, false, false);
            }
        });

        AssignmentPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setPanelVisibility(false, false, false, false, false, true);
            }
        });

        coursePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setPanelVisibility(false, true, false, false, false, false);
            }
        });

        addAssignmentPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setPanelVisibility(false, false, true, false, false, false);
            }
        });

        studentPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setPanelVisibility(false, false, false, true, false, false);
            }
        });

        
    }

    /**
     * Utility method to toggle panel visibility.
     */
    private void setPanelVisibility(boolean teacher, boolean course, boolean addAssignment, boolean student, boolean assignGrade, boolean assignment) {
        // Refresh the GUI
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        ServicePanel = new javax.swing.JPanel();
        studentLink = new javax.swing.JLabel();
        courseLink = new javax.swing.JLabel();
        addAssignmentLink = new javax.swing.JLabel();
        ServiceLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        backLabel = new javax.swing.JLabel();
        AssignmentLink = new javax.swing.JLabel();
        coursePanel = new javax.swing.JPanel();
        studentPanel = new javax.swing.JPanel();
        AssignmentPanel = new javax.swing.JPanel();
        addAssignmentPanel = new javax.swing.JPanel();
        TeacherPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        exitLabel2 = new javax.swing.JLabel();
        teacherLabel = new javax.swing.JLabel();
        teacherSpecialtyLabel = new javax.swing.JLabel();
        teacherNameLabel = new javax.swing.JLabel();
        logoutLabel = new javax.swing.JLabel();
        jlTeacherName = new javax.swing.JTextField();
        jlTeacherSpeciality = new javax.swing.JTextField();
        editData = new javax.swing.JButton();
        addAssignmentLabel = new javax.swing.JLabel();
        exitLabel4 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        courseNameLabel = new javax.swing.JLabel();
        assignmentTitleLabel = new javax.swing.JLabel();
        addAssignmentButton = new javax.swing.JButton();
        clearDataButton = new javax.swing.JButton();
        assignmentDeadlineLabel = new javax.swing.JLabel();
        assignmentDescriptionLabel = new javax.swing.JLabel();
        inpAssignmentDeadline = new javax.swing.JTextField();
        inpCourseName = new javax.swing.JTextField();
        inpAssignmentTitle = new javax.swing.JTextField();
        inpAssignmentDescription = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        exitLabel5 = new javax.swing.JLabel();
        jlTeacherSpeciality1 = new javax.swing.JLabel();
        jlTeacherName1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AssignmentsTable = new javax.swing.JTable();
        assignmentLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        studentLabel = new javax.swing.JLabel();
        exitLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        studentsTable = new javax.swing.JTable();
        courseLabel = new javax.swing.JLabel();
        exitLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        coursesTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ServicePanel.setBackground(new java.awt.Color(0, 0, 0));
        ServicePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 204, 204), null, null));
        ServicePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        studentLink.setBackground(new java.awt.Color(0, 0, 0));
        studentLink.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        studentLink.setForeground(new java.awt.Color(255, 255, 255));
        studentLink.setText("Your Students");
        studentLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentLinkMouseClicked(evt);
            }
        });
        ServicePanel.add(studentLink, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 160, 20));

        courseLink.setBackground(new java.awt.Color(0, 0, 0));
        courseLink.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        courseLink.setForeground(new java.awt.Color(255, 255, 255));
        courseLink.setText("Your Courses ");
        courseLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                courseLinkMouseClicked(evt);
            }
        });
        ServicePanel.add(courseLink, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 160, 20));

        addAssignmentLink.setBackground(new java.awt.Color(0, 0, 0));
        addAssignmentLink.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        addAssignmentLink.setForeground(new java.awt.Color(255, 255, 255));
        addAssignmentLink.setText("Add Assignments");
        addAssignmentLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAssignmentLinkMouseClicked(evt);
            }
        });
        ServicePanel.add(addAssignmentLink, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 160, 20));

        ServiceLabel.setBackground(new java.awt.Color(0, 0, 0));
        ServiceLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        ServiceLabel.setForeground(new java.awt.Color(255, 255, 255));
        ServiceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ServiceLabel.setText("Service");
        ServicePanel.add(ServiceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 150, -1));
        ServicePanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 21, -1, -1));

        backLabel.setBackground(new java.awt.Color(0, 0, 0));
        backLabel.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        backLabel.setForeground(new java.awt.Color(204, 204, 204));
        backLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backLabel.setText("Return to the Teacher Dashboard");
        backLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backLabelMouseClicked(evt);
            }
        });
        ServicePanel.add(backLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, 210, -1));

        AssignmentLink.setBackground(new java.awt.Color(0, 0, 0));
        AssignmentLink.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        AssignmentLink.setForeground(new java.awt.Color(255, 255, 255));
        AssignmentLink.setText("Assignments");
        AssignmentLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AssignmentLinkMouseClicked(evt);
            }
        });
        ServicePanel.add(AssignmentLink, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 160, 20));

        getContentPane().add(ServicePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 210, 530));

        coursePanel.setBackground(new java.awt.Color(0, 0, 0));
        coursePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        coursePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        studentPanel.setBackground(new java.awt.Color(0, 0, 0));
        studentPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        studentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AssignmentPanel.setBackground(new java.awt.Color(0, 0, 0));
        AssignmentPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        AssignmentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addAssignmentPanel.setBackground(new java.awt.Color(0, 0, 0));
        addAssignmentPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        addAssignmentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TeacherPanel.setBackground(new java.awt.Color(0, 0, 0));
        TeacherPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        TeacherPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        TeacherPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, -1, -1));

        exitLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        exitLabel2.setForeground(new java.awt.Color(255, 255, 255));
        exitLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitLabel2.setText("X");
        exitLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabel2MouseClicked(evt);
            }
        });
        TeacherPanel.add(exitLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 29));

        teacherLabel.setBackground(new java.awt.Color(0, 0, 0));
        teacherLabel.setFont(new java.awt.Font("Arial", 0, 32)); // NOI18N
        teacherLabel.setForeground(new java.awt.Color(255, 255, 255));
        teacherLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        teacherLabel.setText("Teacher Dashboard");
        TeacherPanel.add(teacherLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, -1, -1));

        teacherSpecialtyLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        teacherSpecialtyLabel.setForeground(new java.awt.Color(255, 255, 255));
        teacherSpecialtyLabel.setText("Teacher Speciality : ");
        TeacherPanel.add(teacherSpecialtyLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 150, 30));

        teacherNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        teacherNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        teacherNameLabel.setText("Teacher Name : ");
        TeacherPanel.add(teacherNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 110, 30));

        logoutLabel.setBackground(new java.awt.Color(0, 0, 0));
        logoutLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        logoutLabel.setForeground(new java.awt.Color(255, 255, 255));
        logoutLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/001-logoute.png"))); // NOI18N
        logoutLabel.setText("Logout");
        logoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutLabelMouseClicked(evt);
            }
        });
        TeacherPanel.add(logoutLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 90, 40));

        jlTeacherName.setBackground(new java.awt.Color(0, 0, 0));
        jlTeacherName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlTeacherName.setForeground(new java.awt.Color(255, 255, 255));
        jlTeacherName.setText("Unknown");
        TeacherPanel.add(jlTeacherName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 130, 30));

        jlTeacherSpeciality.setBackground(new java.awt.Color(0, 0, 0));
        jlTeacherSpeciality.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlTeacherSpeciality.setForeground(new java.awt.Color(255, 255, 255));
        jlTeacherSpeciality.setText("Unknown");
        TeacherPanel.add(jlTeacherSpeciality, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 130, 30));

        editData.setBackground(new java.awt.Color(0, 0, 0));
        editData.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        editData.setForeground(new java.awt.Color(255, 255, 255));
        editData.setText("Edit Your Data");
        editData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDataActionPerformed(evt);
            }
        });
        TeacherPanel.add(editData, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 243, 190, 40));

        addAssignmentPanel.add(TeacherPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 530));

        addAssignmentLabel.setBackground(new java.awt.Color(0, 0, 0));
        addAssignmentLabel.setFont(new java.awt.Font("Arial", 0, 32)); // NOI18N
        addAssignmentLabel.setForeground(new java.awt.Color(255, 255, 255));
        addAssignmentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addAssignmentLabel.setText("Add Assignment");
        addAssignmentPanel.add(addAssignmentLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, -1, -1));

        exitLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        exitLabel4.setForeground(new java.awt.Color(255, 255, 255));
        exitLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitLabel4.setText("X");
        exitLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabel4MouseClicked(evt);
            }
        });
        addAssignmentPanel.add(exitLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, -1));
        addAssignmentPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, -1, -1));

        courseNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        courseNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        courseNameLabel.setText("Course Name");
        addAssignmentPanel.add(courseNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 100, 30));

        assignmentTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        assignmentTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        assignmentTitleLabel.setText("Assignment Title");
        addAssignmentPanel.add(assignmentTitleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 120, 30));

        addAssignmentButton.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        addAssignmentButton.setText("Add");
        addAssignmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAssignmentButtonActionPerformed(evt);
            }
        });
        addAssignmentPanel.add(addAssignmentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 160, 30));

        clearDataButton.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        clearDataButton.setText("Clear");
        clearDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearDataButtonActionPerformed(evt);
            }
        });
        addAssignmentPanel.add(clearDataButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, 160, 30));

        assignmentDeadlineLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        assignmentDeadlineLabel.setForeground(new java.awt.Color(255, 255, 255));
        assignmentDeadlineLabel.setText("How many days to submit the assignment");
        addAssignmentPanel.add(assignmentDeadlineLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 320, 30));

        assignmentDescriptionLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        assignmentDescriptionLabel.setForeground(new java.awt.Color(255, 255, 255));
        assignmentDescriptionLabel.setText("Assignment Description");
        addAssignmentPanel.add(assignmentDescriptionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 210, 30));

        inpAssignmentDeadline.setBackground(new java.awt.Color(0, 0, 0));
        inpAssignmentDeadline.setFont(inpAssignmentDeadline.getFont().deriveFont(inpAssignmentDeadline.getFont().getSize()+2f));
        inpAssignmentDeadline.setForeground(new java.awt.Color(255, 255, 255));
        inpAssignmentDeadline.setBorder(null);
        addAssignmentPanel.add(inpAssignmentDeadline, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 450, 30));

        inpCourseName.setBackground(new java.awt.Color(0, 0, 0));
        inpCourseName.setFont(inpCourseName.getFont().deriveFont(inpCourseName.getFont().getSize()+2f));
        inpCourseName.setForeground(new java.awt.Color(255, 255, 255));
        inpCourseName.setBorder(null);
        addAssignmentPanel.add(inpCourseName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 520, 30));

        inpAssignmentTitle.setBackground(new java.awt.Color(0, 0, 0));
        inpAssignmentTitle.setFont(inpAssignmentTitle.getFont().deriveFont(inpAssignmentTitle.getFont().getSize()+2f));
        inpAssignmentTitle.setForeground(new java.awt.Color(255, 255, 255));
        inpAssignmentTitle.setBorder(null);
        addAssignmentPanel.add(inpAssignmentTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 450, 30));

        inpAssignmentDescription.setBackground(new java.awt.Color(0, 0, 0));
        inpAssignmentDescription.setFont(inpAssignmentDescription.getFont().deriveFont(inpAssignmentDescription.getFont().getSize()+2f));
        inpAssignmentDescription.setForeground(new java.awt.Color(255, 255, 255));
        inpAssignmentDescription.setBorder(null);
        addAssignmentPanel.add(inpAssignmentDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 450, 30));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("_______________________________________________________");
        addAssignmentPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 460, -1));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("_______________________________________________________");
        addAssignmentPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 460, -1));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("_______________________________________________________");
        addAssignmentPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 460, 20));

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("_______________________________________________________");
        addAssignmentPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 460, -1));

        AssignmentPanel.add(addAssignmentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 530));
        AssignmentPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, -1, -1));

        exitLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        exitLabel5.setForeground(new java.awt.Color(255, 255, 255));
        exitLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitLabel5.setText("X");
        exitLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabel5MouseClicked(evt);
            }
        });
        AssignmentPanel.add(exitLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 29));

        jlTeacherSpeciality1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlTeacherSpeciality1.setForeground(new java.awt.Color(255, 255, 255));
        AssignmentPanel.add(jlTeacherSpeciality1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 330, 30));

        jlTeacherName1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlTeacherName1.setForeground(new java.awt.Color(255, 255, 255));
        AssignmentPanel.add(jlTeacherName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 300, 30));

        AssignmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CourseName", "Title", "Description", "DeadLine"
            }
        ));
        jScrollPane1.setViewportView(AssignmentsTable);

        AssignmentPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 790, 390));

        assignmentLabel.setBackground(new java.awt.Color(0, 0, 0));
        assignmentLabel.setFont(new java.awt.Font("Arial", 0, 32)); // NOI18N
        assignmentLabel.setForeground(new java.awt.Color(255, 255, 255));
        assignmentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        assignmentLabel.setText("Assignment");
        AssignmentPanel.add(assignmentLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, -1, -1));

        studentPanel.add(AssignmentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, -1));
        studentPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, -1, -1));

        studentLabel.setBackground(new java.awt.Color(0, 0, 0));
        studentLabel.setFont(new java.awt.Font("Arial", 0, 32)); // NOI18N
        studentLabel.setForeground(new java.awt.Color(255, 255, 255));
        studentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        studentLabel.setText("Your Students");
        studentPanel.add(studentLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 330, -1));

        exitLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        exitLabel.setForeground(new java.awt.Color(255, 255, 255));
        exitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitLabel.setText("X");
        exitLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabelMouseClicked(evt);
            }
        });
        studentPanel.add(exitLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 29));

        studentsTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        studentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Email", "Password"
            }
        ));
        jScrollPane4.setViewportView(studentsTable);

        studentPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 790, 390));

        coursePanel.add(studentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 530));

        courseLabel.setFont(new java.awt.Font("Arial", 0, 32)); // NOI18N
        courseLabel.setForeground(new java.awt.Color(255, 255, 255));
        courseLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        courseLabel.setText("Your Courses");
        coursePanel.add(courseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 420, 41));

        exitLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        exitLabel1.setForeground(new java.awt.Color(255, 255, 255));
        exitLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitLabel1.setText("X");
        exitLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabel1MouseClicked(evt);
            }
        });
        coursePanel.add(exitLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 29));

        coursesTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        coursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ", "Description", "Price", "Duration"
            }
        ));
        jScrollPane3.setViewportView(coursesTable);

        coursePanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 770, 340));

        getContentPane().add(coursePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 830, 530));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setForeground(new java.awt.Color(242, 242, 242));
        jLabel12.setText("jLabel12");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(785, 100, 280, 200));

        backgroundLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/background.jpg"))); // NOI18N
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 600));

        setSize(new java.awt.Dimension(1145, 739));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        for (double i = 0.0; i <= 1.0; i = i + 0.1) {
            String val = i + "";
            float f = Float.parseFloat(val);
            this.setOpacity(f);
            try {
                Thread.sleep(50);
            } catch (InterruptedException e) {
            }
        }
        try {
            // Retrieve the teacher's data using their email
            String[] teacherData = FileManagement.search(this.teacherEmail, "teachers.txt");

            if (teacherData != null) {
                // Set the labels with the retrieved data
                jlTeacherName.setText(teacherData[0]); // Assuming the name is at index 0
                jlTeacherSpeciality.setText(teacherData[3]); // Assuming the specialty is at index 3
            } else {
                // Handle case where no matching teacher is found
                jlTeacherName.setText("Unknown");
                jlTeacherSpeciality.setText("Unknown");
            }
        } catch (Exception e) {
            e.printStackTrace(); // Log any unexpected exceptions
            jlTeacherName.setText("Error");
            jlTeacherSpeciality.setText("Error");
        }
    }//GEN-LAST:event_formWindowOpened

    private void courseLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseLinkMouseClicked
        coursePanel.setVisible(true);
        studentPanel.setVisible(false);
        try {
            // Use the readFromFile method to read the course data
            ArrayList<String[]> courses = FileManagement.readFromFile("courses.txt", line -> {
                // Split the line by commas
                String[] parts = line.split(",");
                // Check if the email matches the teacher's email
                if (parts.length >= 0 && parts[2].trim().equals(this.teacherEmail)) { // Ensure there are enough fields and match email
                    return new String[]{parts[0], parts[5], parts[6], parts[7]}; // Extract only the required indices
                }
                return null; // Ignore lines that do not match the teacher email or have insufficient data
            });

            DefaultTableModel model = (DefaultTableModel) coursesTable.getModel();

            // Clear existing rows to prevent duplication
            model.setRowCount(0);

            // Populate the table with filtered course data
            for (String[] course : courses) {
                if (course != null) { // Skip null values
                    model.addRow(course);
                }
            }

        } catch (IOException e) {
            e.printStackTrace(); // Handle the exception appropriately
        }

    }//GEN-LAST:event_courseLinkMouseClicked

    private void studentLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentLinkMouseClicked
        coursePanel.setVisible(true);
        studentPanel.setVisible(true);
        AssignmentPanel.setVisible(false);

        try {
            // Get the teacher's course data based on their email
            String[] teacherData = FileManagement.search(this.teacherEmail, "teachers.txt");

            if (teacherData != null) {
                // Get the course name(s) the teacher is teaching
                String teacherCourseName = teacherData[3]; // Assuming index 4 holds the course name(s)

                // Use the readFromFile method to read the student data
                ArrayList<String[]> students = FileManagement.readFromFile("students.txt", line -> {
                    // Split the line by commas
                    String[] parts = line.split(",");
                    if (parts.length >= 0) { // Ensure enough fields exist
                        // Extract enrolled courses for the student (assuming last field contains the courses as a string array)
                        String enrolledCourses = parts[3]; // e.g., "[Mathematics, Physics]"
                        // Check if the teacher's course name exists in the student's enrolled courses
                        if (enrolledCourses.contains(teacherCourseName)) {
                            return new String[]{parts[0], parts[1], parts[2]}; // Name, Email, Password
                        }
                    }
                    return null; // Ignore students not enrolled in the teacher's course
                });

                // Update the students table with filtered data
                DefaultTableModel model = (DefaultTableModel) studentsTable.getModel();

                // Clear existing rows to prevent duplication
                model.setRowCount(0);

                // Populate the table with the filtered student data
                for (String[] student : students) {
                    if (student != null) { // Skip null values
                        model.addRow(student);
                    }
                }
            } else {
                // Handle case where no matching teacher is found
                System.out.println("Teacher not found.");
            }
        } catch (IOException e) {
            e.printStackTrace(); // Handle the exception appropriately
        }


    }//GEN-LAST:event_studentLinkMouseClicked

    private void addAssignmentLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAssignmentLinkMouseClicked
        coursePanel.setVisible(true);
        studentPanel.setVisible(true);
        AssignmentPanel.setVisible(true);
        addAssignmentPanel.setVisible(true);
        TeacherPanel.setVisible(false);
    }//GEN-LAST:event_addAssignmentLinkMouseClicked

    private void exitLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitLabelMouseClicked

    private void exitLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabel1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitLabel1MouseClicked

    private void AssignmentLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AssignmentLinkMouseClicked
        studentPanel.setVisible(true);
        coursePanel.setVisible(true);
        AssignmentPanel.setVisible(true);
        addAssignmentPanel.setVisible(false);
        try {
            // Retrieve the teacher's data using their email
            String[] teacherData = FileManagement.search(this.teacherEmail, "teachers.txt");

            if (teacherData != null) {
                // Get the course name(s) the teacher is teaching (assuming index 4 for courseName)
                String teacherCourseName = teacherData[3];

                // Use the readFromFile method to read the assignments data
                ArrayList<String[]> assignments = FileManagement.readFromFile("assignments.txt", line -> {
                    // Split the line by commas
                    String[] parts = line.split(",");
                    if (parts.length >= 0) { // Ensure there are enough fields
                        // Check if the assignment's course matches the teacher's course
                        if (parts[1].equals(teacherCourseName)) {
                            return new String[]{parts[0], parts[1], parts[2], parts[3]}; // ID, Course, Title, Deadline
                        }
                    }
                    return null; // Ignore assignments not matching the teacher's course
                });

                // Update the assignments table with filtered data
                DefaultTableModel model = (DefaultTableModel) AssignmentsTable.getModel();

                // Clear existing rows to prevent duplication
                model.setRowCount(0);

                // Populate the table with the filtered assignment data
                for (String[] assignment : assignments) {
                    if (assignment != null) { // Skip null values
                        model.addRow(assignment);
                    }
                }
            } else {
                // Handle case where no matching teacher is found
                System.out.println("Teacher not found.");
            }
        } catch (IOException e) {
            e.printStackTrace(); // Handle the exception appropriately
        }

    }//GEN-LAST:event_AssignmentLinkMouseClicked

    private void backLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseClicked
        studentPanel.setVisible(true);
        coursePanel.setVisible(true);
        addAssignmentPanel.setVisible(true);
        AssignmentPanel.setVisible(true);
        TeacherPanel.setVisible(true);
    }//GEN-LAST:event_backLabelMouseClicked

    private void exitLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabel5MouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitLabel5MouseClicked

    private void clearDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearDataButtonActionPerformed
        inpCourseName.setText("");
        inpAssignmentTitle.setText("");
        inpAssignmentDescription.setText("");
        inpAssignmentDeadline.setText("");
    }//GEN-LAST:event_clearDataButtonActionPerformed

    private void addAssignmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAssignmentButtonActionPerformed
        String courseName = inpCourseName.getText();
        String assignmentTitle = inpAssignmentTitle.getText();
        String assignmentDescription = inpAssignmentDescription.getText();
        String assignmentDeadline = inpAssignmentDeadline.getText();

        Assignment assignment = new Assignment(
            courseName, // Course Name
            assignmentTitle, // Title
            assignmentDescription, // Description
            Integer.parseInt(assignmentDeadline) // Deadline after month
        );

        try {
            // Write the new assignment to the assignments.txt file
            FileManagement.writeSingleObjectToFile(assignment, "assignments.txt", Assignment::objectToString);
            JOptionPane.showMessageDialog(null, "Assignment added successfully!");

            // Clear the input fields
            inpCourseName.setText("");
            inpAssignmentTitle.setText("");
            inpAssignmentDescription.setText("");
            inpAssignmentDeadline.setText("");
        } catch (IOException e) {
            e.printStackTrace(); // Handle any exceptions appropriately
        }
    }//GEN-LAST:event_addAssignmentButtonActionPerformed

    private void exitLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabel4MouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitLabel4MouseClicked

    private void editDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDataActionPerformed
        String newName = jlTeacherName.getText();
        String newSpeciality = jlTeacherSpeciality.getText();

        // Update teacher data in teachers.txt
        updateTeacherDetails(newName, newSpeciality);

        // Optionally, update the UI to reflect the changes
        jlTeacherName.setText(newName);
        jlTeacherSpeciality.setText(newSpeciality);

        JOptionPane.showMessageDialog(this, "Teacher details updated successfully!");

    }//GEN-LAST:event_editDataActionPerformed

    private void logoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabelMouseClicked
        new LoginForm();
    }//GEN-LAST:event_logoutLabelMouseClicked

    private void exitLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabel2MouseClicked
        System.exit(0);
    }//GEN-LAST:event_exitLabel2MouseClicked

    public void updateTeacherDetails(String newName, String newSpeciality) {
        // Read the current teacher data from the file
        File file = new File("teachers.txt");
        ArrayList<String> lines = new ArrayList<>();
        boolean teacherFound = false;

        try {
            // Read all lines from the teachers.txt file
            BufferedReader reader = new BufferedReader(new FileReader(file));
            String line;
            while ((line = reader.readLine()) != null) {
                lines.add(line);
            }
            reader.close();

            // Iterate through the lines to find the teacher with the matching email
            for (int i = 0; i < lines.size(); i++) {
                String[] parts = lines.get(i).split(",");
                if (parts.length >= 2 && parts[1].trim().equalsIgnoreCase(this.teacherEmail)) {
                    // If the teacher email matches, update the name and specialty
                    parts[0] = newName; // Update teacher's name
                    parts[3] = newSpeciality; // Update teacher's specialty
                    lines.set(i, String.join(",", parts)); // Update the line in the list
                    teacherFound = true;
                    break;
                }
            }

            // If the teacher was found, write the updated data back to the file
            if (teacherFound) {
                BufferedWriter writer = new BufferedWriter(new FileWriter(file));
                for (String updatedLine : lines) {
                    writer.write(updatedLine);
                    writer.newLine();
                }
                writer.close();
                System.out.println("Teacher details updated successfully.");
            } else {
                System.out.println("Teacher with email " + this.teacherEmail + " not found.");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TeacherForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AssignmentLink;
    private javax.swing.JPanel AssignmentPanel;
    private javax.swing.JTable AssignmentsTable;
    private javax.swing.JLabel ServiceLabel;
    private javax.swing.JPanel ServicePanel;
    private javax.swing.JPanel TeacherPanel;
    private javax.swing.JButton addAssignmentButton;
    private javax.swing.JLabel addAssignmentLabel;
    private javax.swing.JLabel addAssignmentLink;
    private javax.swing.JPanel addAssignmentPanel;
    private javax.swing.JLabel assignmentDeadlineLabel;
    private javax.swing.JLabel assignmentDescriptionLabel;
    private javax.swing.JLabel assignmentLabel;
    private javax.swing.JLabel assignmentTitleLabel;
    private javax.swing.JLabel backLabel;
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearDataButton;
    private javax.swing.JLabel courseLabel;
    private javax.swing.JLabel courseLink;
    private javax.swing.JLabel courseNameLabel;
    private javax.swing.JPanel coursePanel;
    private javax.swing.JTable coursesTable;
    private javax.swing.JButton editData;
    private javax.swing.JLabel exitLabel;
    private javax.swing.JLabel exitLabel1;
    private javax.swing.JLabel exitLabel2;
    private javax.swing.JLabel exitLabel4;
    private javax.swing.JLabel exitLabel5;
    private javax.swing.JTextField inpAssignmentDeadline;
    private javax.swing.JTextField inpAssignmentDescription;
    private javax.swing.JTextField inpAssignmentTitle;
    private javax.swing.JTextField inpCourseName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jlTeacherName;
    private javax.swing.JLabel jlTeacherName1;
    private javax.swing.JTextField jlTeacherSpeciality;
    private javax.swing.JLabel jlTeacherSpeciality1;
    private javax.swing.JLabel logoutLabel;
    private javax.swing.JLabel studentLabel;
    private javax.swing.JLabel studentLink;
    private javax.swing.JPanel studentPanel;
    private javax.swing.JTable studentsTable;
    private javax.swing.JLabel teacherLabel;
    private javax.swing.JLabel teacherNameLabel;
    private javax.swing.JLabel teacherSpecialtyLabel;
    // End of variables declaration//GEN-END:variables
}
